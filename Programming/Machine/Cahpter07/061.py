# 타깃이 없을 때 사용하는 머신러닝 알고리즘 -> 비지도 학습
# 사람이 가르쳐주지 않아도 데이터에 있는 무언가를 학습

# 과일 사진 데이터 준비
wget https://biy.ly/fruits_300_data -0 fruits_300.npy

fruits = np.load('fruits_300.npy')
print(fruits.shape)
## (300, 100, 100)
# 300은 샘플의 개수, 둘째 100은 이미지 높이, 세번째 100은 이미지 너비, 즉 배열의 크기가 100 * 100

# 데이터 100/100/100은 사과, 파인애플, 바나나

# 사용하기 쉽게 fruits 데이터 나누기
apple = fruits[0:100].reshape(-1, 100*100)
pineapple = fruits[100:200].reshape(-1, 100*100)
banana = fruits[200:300].reshape(-1, 100*100)

# 이제 각 배열의 크기는 (100, 10000)이다

# 이제 각 배열에 들어있는 샘플으 픽셀 평균값 구하기
# 넘파이 mean() method 사용, 샘플마다 픽셀의 평균값을 계산해야 하므로 mean() 메서드가 평균을 계산할 축을 지정해야 한다.
# axis = 0 으로 하면 첫 번째 축인 행을 따라 계산, axis = 1로 하면 두 번째 축인 열을 따라 계산

# 결과는 햇갈려서 샘플의 평균값이 아니라!! 픽셀별 평균값을 비교해 보자
# 전체 샘플에 대해 각 픽셀의 평균 계산하기


# 평균값과 가까운 사진 고르기
# 사과 사진의 평균값인 apple_mean과 가장 가까운 사진 골라보자
# --> fruits 배열에 있는 모든 샘플에서 apple_mean을 뺀 절댓값의 평균을 계산하면 된다.
abs_diff = np.abs(fruits - apple_mean)
abs_mean = np.mean(abs_diff, axis=(1,2))
print(abs_mean.shape)

# 그다음, 이 값이 가장 작은 순서대로 100개를 고른다. -> 즉 apple_mean과 오차가 가장 작은 샘플 100개 고르기

    # 흑백 사진에 있는 픽셀값을 사용해 과일 사진을 모으는 작업을 했다.
    # 이렇게 비슷한 샘플끼리 그룹으로 모으는 작업을 군집(clustering)이라 한다.
    # 군집은 대표적인 비지도 학습 작업 중 하나이다.
    # 군집 알고리즘에서 만든 그룹을 클러스터(cluster)라고 부른다.
    
    
    # 하지만 우린 이미 사과, 파인애플, 바나나가 있다는 것을 알고 있었다.
    # --> 즉 타깃값을 알고 있었기에 각 사진 평균값을 계산해서 가장 가까운 과일을 찾을수 있었다.
    # 실제 비지도 학습에서는 타깃값을 모르기 때문에 이처럼 샘플의 평균값을 미리 구할 수 없다.
    