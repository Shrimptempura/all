<예외와 예외 클래스>
에러 발생시 JVM 실행에 문제가 생겼다는 것이므로 JVM 위에서 실행되는 프로그램을 아무리 견고하게 만들어도
결국 실행 불능이 된다.

자바에는 에러 이외에 예외(exception) 오류가 있는데 예외는 사용자의 잘못된 동작 및 개발자의 잘못된 코딩으로
발생하는 프로그램 오류이다.

예외는 에러와 비슷하나 예외는 예외 처리(Exception Handling)를 통해 프로그램을 종료하지 않고
정상 실행 상태가 유지되도록 할 수 있다.

예외에는 두 가지 종류가 있는데, 하나는 일반 예외(Exception)이고, 다른 하나는 실행 예외(Runtime Exception)이다.
일반 예외는 컴파일러 체크 예외라고도 부르며, 자바 소스를 컴파일하는 과정에서
예외 처리 코드가 필요한지 검사하기 때문이다.

만약 예외 처리 코드가 없다면 컴파일 오류가 발생한다.

실행 예외는 컴파일 과정에서 예외 처리 코드를 검사하지 않는 예외를 말한다.

컴파일 시 예외 처리를 확일하는 차이일뿐, 두 가지 예외는 모두 예외 처리가 필요하다.

자바에서는 에외를 클래스로 관리한다. JVM은 프로그램을 실행하는 도중에 예외가 발생하면
해당 예외 클래스로 객체를 생성한다.
그러고 나서 예외 처리 코드에서 예외 객체를 이용할 수 있도록 해준다. 

모든 예외 클래스들은 다음와 같이 java.lang.Exception 클래스를 상속 받는다.

<일반 예외와 실행 예외 클래스 구별법>
일반 예외는 Exception을 상속받지만 Runtime Exception을 상속받지 않는 클래스
실행 예외는 RuntimeException을 상속받은 클래스이다.

RuntimeException 역시 Exception을 상속받지만, JVM은 RuntimeException을 상속했는지
여부를 보고 실행 예외를 판단한다.