<예외 처리 코드(Exception Handling Code)>
자바 컴파일러는 소스 파일을 컴파일할 때 일반 예외가 발생할 가능성이 있는 코드를 발견하면
컴파일 오류를 발생시켜 개발자로 하여금 강제적으로 예외 처리 코드를 작성하도록 요구한다.

그러나 실행 예외는 컴파일러가 체크해주지 않기 때문에 예외 처리 코드를 개발자의 경험을 바탕으로 작성해야 한다.

예외 처리 코드는 try-catch-finally 블록을 이용한다.

try-catch-finally 블록은 생성자 내부와 메소드 내부에서 작성되어 일반 예외와 실행 예외가
발생할 경우 예외 처리를 할 수 있도록 해준다.

(정상 실행 되었을 경우)
try {
    예외 발생 가능 코드 -> 22행으로 이동
}

catch (예외클래스 e) {
    예외 처리
}

finally {
    항상 실행;
}
---------------------------------
(예외 발생 경우)
try {
    예외 발생 -> 31행으로 이동
}

catch (예외클래스 e) {
    예외 처리
}

finally {
    항상 실행;
}

try 블록에는 예외 발생 가능 코드가 위치한다.
try 블록의 코드가 예외 발생 없이 정상 실행시 catch 블록의 코드는 실행되지 않고,
finally 블록의 코드를 실행한다.

만약 try 블록의 코드에서 예외가 발생시 즉시 실행을 멈추고 catch 블록으로 이동하여
예외 처리 코드를 실행한다. 그리고 finally 블록의 코드를 실행한다.

finally 블록은 옵션으로 생략 가능하다. 예외 발생 여부와 상관없이 항상 실행할 내용이 있을 경우에만
finally 블록을 작성해주면 된다.

try 블록와 catch 블록에서 return문을 사용하더라도 finally 블록은 항상 실행된다.