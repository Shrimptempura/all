<예외 정보 얻기>
try 블록에서 예외가 발생되면 예외 객체는 catch 블록의 매개 변수에서 참조하게 되므로
매개 변수를 이용하면 예외 객체의 정보를 알 수 있다.

모든 예외 객체는 Exception 클래스를 상속하기 때문에 Exception이 가지고 있는 메소드들을 
모든 예외 객체에서 호출할 수 있다. 그중에서도 가장 많이 사용되는 메소드는 getMessage()와 printStackTrace()이다.
예외를 발생시킬 때 다음과 같이 String 타입의 메시지를 갖는 생성자를 이용하였다면,
메시지는 자동적으로 예외 객체 내부에 저장된다.

    throw new XXXException("예외 메시지");

예외 메시지의 내용에는 왜 예외가 발생했는지에 대한 간단한 설명이 포함된다.
좀 더 상세한 원인을 세분화하기 위해 예외 코드를 포함하기도 하는데,

예를 들어 데이터베이스에서 발생한 오류들은 예외 코드가 에외 메시지로 전달된다. 이와 같은 예외 메시지는
다음과 같이 catch 블록에서 getMessage() 메소드의 리턴값으로 얻을 수 있다.

    } catch (Exception e) {
        String message = e.getMessage();
    }

printStackTrace()는 메소드 이름에서도 알 수 있듯이 예외 발생 코드를 추적해서 모두 콘솔에 출력한다.
어떤 예외가 어디에서 발생했는지 상세하게 출력해주기 때문에 프로그램을 테스트하면서 오류를 찾을 때 활용된다.

    try {
        ;
    } catch (예외 클래스 e) {
        // 예외가 가지고 있는 Message 얻기
        String message = e.getMessage();

        // 예외의 발생 경로를 추적
        e.printStackTrace();
    }