<ClassCastingException>
타입 변환(Casting)은 상위클래스와 하위 클래스 간에 발새하고 구현 클래스와 인터페이스 간에도 발생한다.

이러한 관계가 아니라면 클래스는 다른 클래스로 타입 변환할 수 없다. 억지로 타입 변환 시도시
ClassCastingException이 발생한다.

가정..
Animal : 추상클래스 <- Dog, Cat

RemoteControl : 인터페이스 <- Television, Audio

Animal 타입 변수에 대입된 객체가 Dog이므로 다시 Dog 타입으로 변환하는 것은 아무런 문제가 없다.
마찬가지로 RemoteControl 타입 변수에 대입된 객체가 Television이므로 다시 Television 타입으로 변환은 문제가 없다.

Animal animal = new Dog();          |           RemoteControl rc = new Television();
Dog dog = (Dog) animal;             |           Television tv = (Television) rc;


그러나 다음과 같이 타입변환시 ClassCastingException이 발생한다.
대입된 객체가 아닌 다른 클래스 타입으로 변환했기 때문이다.

Animal animal = new Dog();          |           RemoteControl rc = new Television();
Cat cat = (Cat) animal;             |           Audio audio = (Audio) rc;

ClassCastingException을 발생시키지 않을려면 타입 변환 전에 타입 변환이 가능한지
instanceof 연산자로 확인하는 것이 좋다.
instanceof 연산의 결과가 true이면 좌항 객체를 우항 타입으로 변환이 가능하다는 뜻이다.

Animal animal = new Dog();
if (animal instanceof Dog) {
    Dog dog = (Dog) aniaml;
}
else if (aniaml instanceof Cat) {
    Cat cat = (Cat) aniaml;
}
--------------------------------
Remocon rc = new Audio();
if (rc instanceof Television) {
    Television tv = (Television) rc;
}
else if (rc instanceof Audio) {
    Audio audio = (Audio) rc;
}