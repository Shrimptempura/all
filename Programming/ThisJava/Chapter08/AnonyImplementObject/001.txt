/*
<익명 구현 객체>
구현 클래스를 만들어 사용하는 것이 일반적이고, 클래스를 재사용할 수 있기 때문에
편리하지만, 일회성의 구현 객체를 만들기 위해 소스 파일을 만들고 
클래스를 선언하는 것은 비효율적이다.

자바는 소스 파일을 만들지 않고도 구현 객체를 만들 수 있는 방법을 제공하는데,
그것이 익명 구현 객체이다

자바는 UI 프로그래밍에서 이벤트를 처리하기 위해, 그리고 임시 작업 스레드를
마들기 위해 익명 구현 객체를 많이 활용한다.

자바 8에서 지원하는 람다식은 인터페이스의 익명 구현 객체를 만들기 때문에
익명 구현 객체의 코드 패턴을 잘 익혀두어야 한다.

다음은 익명 구현 객체를 생성해서 인터페이스 변수에 대입하는 코드이다.
작성 시 주의할 점은 하나의 실행문이므로 끝에는 세미콜론(;)을 붙여야 한다.

    인터페이스 변수 = new 인터페이스() {
        // 인터페이스에 선언된 추상 메소드의 실체 메소드 선언
    };

new 연산자 뒤에는 클래스 이름이 와야 하는데, 이름이 없다. 인터페이스() {}는
인터페이스를 구현해서 중괄호 {}와 같이 클래스를 선언하라는 뜻이고, 
new 연산자는 이렇게 선언된 클래스를 객체로 생성한다.

중괄호 {}에는 인터페이스에 선언된 모든 추상 메소드들의 실체 메소드를 선언할 수 있지만,
익명 객체 안에서만 사용할 수 있고 인터페이스 변수로 접근할 수 없다.
*/