<상속(Inheritance) 개념>
- 잘 개발된 클래스를 재사용해서 새로운 클래스를 만들기 때문에 코드의 중복을 줄여줌

    B b = new B();
    b.field1 = 10;      // A로부터 물려받은 필드와 메소드   
    b.method1();        //  ;;

    b.field2 = "홍길동";    // B가 추가한 필드와 메소드 
    b.method2();            // ;;

상속을 해도 부모 클래스의 모든 필드와 메소드들을 물려받는 것은 아니다.
부모 클래스에서 private 접근 제한을 갖는 필드와 메소드는 상속 대상에서 제외된다.

그리고 부모 클래스와 자식 클래스가 다른 패키지에 존재한다면 default 접근 제한을 갖는
필드와 메소드도 상속 대상에서 제외된다. 그 이외는 모두 상속의 대상이다.

또한 상속을 이용하면 클래스의 수정을 최소화시킬 수도 있다. 부모 클래스의 수정으로
모든 자식 클래스들의 수정 효과를 가져오기 때문에 유지 보수 시간을 최소화시켜준다.
ex) 클래스 B, C가 클래스 A를 상속할 경우 A의 필드와 메소드를 수정함으로써
    B, C를 수정하지 않아도 수정딘 A의 필드와 메소드를 이용할수 있다.