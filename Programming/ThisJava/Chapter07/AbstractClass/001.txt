<추상(Abstract) 클래스>
사전적 의미 : 실체 간에 공통되는 특성을 추출한 것
실체 클래스 : 객체를 직접 생성할 수 있는 클래스
추상 클래스 : 실제 클래스들의 공통적인 특성을 추출해서 선언한 클래스들의

추상(부모), 실체(자식)

추상 클래스는 실체 클래스의 공통되는 필드와 메소드를 추출해서 만들었기 때문에
객체를 직접 생성해서 사용할 수 없다.

다시 말해, 추상 클래스는 new 연산자를 사용해서 인스턴스를 생성시키지 못한다.

    Animal animal = new Animal();   (x)

추상 클래스는 새로운 실체 클래스를 만들기 위해 부모 클래스로만 사용된다.
코드로 설명하면 추상 클래스는 extends 뒤에만 올 수 있는 클래스이다.

예를 들어 Ant 클래스를 만들기 위한 Animal 클래스는 다음과 같다.

    class Ant extends Animal { ... }    (o)

<추상 클래스의 용도>
실체 클래스들의 공통적인 특성(필드, 메소드)을 뽑아내어 추상 클래스로 만드는 이유는?
    1) 실체 클래스들의 공통된 필드와 메소드의 이름을 통일할 목적
    실제 클래스를 설계하는 사람이 여러일 경우, 실제 클래스마다 다른 필드와 메소드를 가질
    수 있다.
        Phone이라는 추상 클래스에 소유자인 owner 필드와 turnOn() 메소드를 선언하고,
        Telephone과 SmartPhone은 Phone을 상속함으로써 필드와 메소드 이름을
        통일 시킬수 있다.


    2) 실체 클래스를 작성할 때 시간을 절약
    공통적인 필드와 메소드는 추상 클래스읜 Phone에 모두 선언해 두고, 실체 클래스마다
    다른 점만 실체 클래스에 선언하게 되면 실체 클래스를 작성하는데 시간을 절약할 수 있다.

    Phone [owner/turnOn()]   <-(inheritance)  Telephone[autoAnswering()]
                                                SmartPhone[internetSearch()]
    추상 클래스                                 실체 클래스

    Telephone과 SmartPhone은 Phone을 상속받기 때문에 owner 필드와 turnOn() 메소드를
    선언할 필요가 없다.

