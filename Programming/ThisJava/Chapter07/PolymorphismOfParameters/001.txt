<매개변수의 다형성> Poltmorphism of Parameters
자동 타입 변환은 필드의 값을 대입할 때에도 발생하지만, 주로 메소드를 호출할 때
많이 발생한다. 

메소드를 호출할 때에는 매개 변수의 타입과 동일한 매개값을 지정하는 것이 정석이지만,

매개값을 다양화하기 위해 매개 변수에 자식 타입 객체를 지정할 수도 있다.

예를 들어 다음과 같이 Driver라는 클래스가 있다. Driver 클래스에는 dirve() 메소드가
정의되어 있는데 Vehicle 타입의 매개 변수가 선언되어 있다.

    class Dirver {
        void dirve(Vehicle vehicle) {
            vehicle.run();
        }
    }

dirve 메소드를 정상적으로 호출한다면 다음과 같다

    Driver driver = new Dirver();
    Vehicle vehicle = new Vehicle();
    driver.drive(vehicle);

만약 Vehicle의 자식 클래스인 Bus 객체를 drive() 메소드의 매개값으로 넘겨준다면
어떻게 될까?

    Vehicle 클래스(부모)    <-(상속)    Bus 클래스(자식)

    Driver driver = new Driver();
    Bus bus = new Bus();
    dirver.drive(bus);      // 자동 타입 변환 발생, Vehicle vehicle = bus;

dirve() 메소드는 Vehicle 타입을 매개 변수로 선언했지만, Vehicle을 상속받는 Bus 객체가
매개값으로 사용되면 자동 타입 변환이 발생한다.

    Vehicle vehicle = bus;      // 자동 타입 변환

** 매개 변수 타입이 클래스일 경우, 해당 클래스의 객체뿐만 아니라 자식 객체까지도 
매개값으로 사용할 수 있다는 것이다. 매개값으로 어떤 자식객체가 제공되느냐에 따라
메소드의 실행 결과는 다양해질 수 있다.(매개 변수의 다형성)

자식 객체가 부모의 메소드를 재정의(Override)했다면 메소드 내부에서 오버라이딩된
메소드를 호출함으로써 메소드의 실행 결과는 다양해진다.

    void drive(Vehicle vehicle) {
                // 자식 객체(Vehicle vehicle)
        vehicle.run();  // 자식 객체가 재정의한 run() 메소드 실행;
    }