<접근 제한자(Access Modifier)>
main() 메소드를 가지지 않는 대부분의 클래스는 외부 클래스에서 이용할 목적으로 설계된
라이브러이다. 라이브러리 클래스를 설계할 때에는 외부 클래스에서 접근할 수 있는 멤버와 접근
할 수 없는 멤버로 구분해서 필드, 생성자, 메소드를 설계하는 것이 바람직하다.

객체 생성을 막기 위해 생성자를 호출하지 못하게 하거나 객체의 특정 데이터를 보호하기 위해
해당 필드에 접근하지 못하도록 막아야 한다. 

그리고 특정 메소드를 호출할 수 없도록 제한할 필요가 있다.
자바는 이러한 기능을 구현하기 위해 접근 제한자(Access Modifier)를 제공한다.

접근 제한자는
public, protected, default, private 4가지 종류가 있다.
public < protected < default < private : 왼쪽으로 갈수록 접근 제한이 강화


접근 제한       적용 대상                                   접근할 수 없는 클래스
public          클래스, 필드, 생성자, 메소드                없음
protected       필드, 생성자, 메소드      자식 클래스가 아닌 다른 패키지에 소속된 클래스
default         클래스, 필드, 생성자, 메소드                다른 패키지에 소속된 클래스
private         필드, 생성자, 메소드                        모든 외부 클래스

<클래스의 접근 제한>
클래스를 선언할 때 고려해야 할 사항은 같은 패키지 내에서만 사용할 것인지,
아니면 다른 패키지에서도 사용할 수 있도록 할 것인지를 결정해야 한다. 클래스에
적용할 수 있는 접근 제한은 public과 default 단 두가지인데 다음과 같다

// default 접근 제한
class 클래스 {...}

// public 접근 제한
public class 클래스 {...}

<default 접근 제한>
클래스를 선언할 때 public을 생략했다면 클래스는 default 접근 제한을 가진다.
클래스가 default 접근 제한을 가지게 되면 같은 패키지에서는 아무런 제한 없이
사용할 수 있지만, 다른 패키지에서는 사용할 수 없도록 제한된다.

[package1]                  [package2]
class A {}          ----> x class C {

class B {                     }
A - > B (O)
}

<public 접근 제한>
클래스를 선언할 때 public 접근 제한자를 붙였다면 클래스는 public 접근 제한을 가진다.
클래스가 public 접근 제한을 가지게 되면 같은 패키지뿐만 아니라 다른 패키지에서도
아무런 제한 없이 사용할 수 있다. 클래스를 다른 개발자가 사용할 수 있도록
라이브러리 클래스로 개발되어야 한다면, 반드시 public 접근 제한을 갖도록 해야 한다.
인터넷으로 배포되는 라이브러리 클래스들도 모두 public 접근 제한을 가지고 있다.