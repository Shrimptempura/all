abs(-100)       // 절대값을 반환하는 함수
    100

min(200, 100, 300, 400)     // 여러 원소들 중 최소값을 반환하는 함수
    100

max(200, 100, 300, 400)     // 여러 원소들 중 최대값을 반환하는 함수
    400

str1 = "F00"        // "FOO" 혹은 'FOO' 형식으로 문자열 객체를 생성함
len(str1)           // 문자열의 길이를 반환
    3

eval("100 + 200 + 300")         // 문자열을 수치값과 연산자로 변환하여 평가
    600

sorted("EABFD")     // 문자열을 정렬
    ['A', 'B', 'D', 'E', 'F']

list = [200, 100, 300, 400]
sorted(list)
    [100, 200, 300, 400]

sorted(list, reverse = True)
[400, 300, 200, 100]


<id() 함수>
파이썬은 객체지향 프로그래밍 언어이므로 파이썬의 객체는 다른 객체와 구별되는
고유한 식별값(identity)을 가지고 있으면 id() 함수는 이 객체의 식별값을 정수형으로 반환
이 식별값은 객체가 유지되는 한 다른 중복되지 않는 상수 값으로 남아있다.

a_str = "Hello Python!"
id(a_str)
    4549938992

n = 300
id(n)
    4549735536
--------------------------------------------

type(123)
    <class 'int'>

type([100, 200, 300])
    <class 'list'>

eval('10 + 20')         // 10 + 20 문장을 파이썬 번역기가 수행함
    30

eval('(5 * 20) / 2')    // (5 * 20) / 2  문장을 파이썬 번역기가 수행함
    50.0

chr(65)         // 유니코드 값 65는 알파벳 'A'이며, chr() 함수는 이를 반환함
    'A'

ord('A')        // 알파벳 'A'의 유니코드 값 65를 반환함
    65


eval() 함수는 스크립트 자체를 수행하는 기능이 매우 강력하다.
이 때문에 시스템의 명령을 직접 호출하여 파이썬이 수행되는 시스템의
모든 파일의 정보를 얻거나 파일을 삭제하는 등의 기능까지 수행할 수 있으므로
주의해서 사용해야 한다.