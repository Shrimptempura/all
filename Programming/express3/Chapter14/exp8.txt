<main 함수의 인수>
main()도 함수이므로 매개 변수와 반환값을 가질 수 있다. 지금까지는 다음과 같은 형태만을
사용하였다. int main(void){ ...} 이 형태에서는 매개 변수 선언위치에 void가 있어서
매개 변수를 전달받지 못했다.

하지만 다른 형태의 main()함수 정의도 사용할 수 있다. 이 정의에서는 매개 변수를 전달
받는 것이 가능하다.
int main(int argc, char *argv[])
{
    ..
}
    위 형태에는 두개의 매개 변수가 선언되어 있다. argc는 명령어가 가지는 인수들의
    개수를 의미한다.
    argv는 명령어가 가지는 인수들을 문자열 형태로 전달한다.

우리가 만든 프로그램은 최종적으로 확장자가 exe인 실행 파일이 되어서 하드 디스크에
저장된다. DOS 창에서 이 프로그램의 이름을 입력하게 되면 프로그램을 실행시킬 수 있다.
예를 들어 프로그램 이름이 mycopy.exe라면 
    C: \cprogram> mycopy src dst (en) 하면 실행된다.

여기서 mycopy 프로그램이 파일 복사하는 프로그램이고 윗처럼 명령어 프로픔트 상에서
원본 파일 이름과 복사본 파일 이름을 받는다고 가정하자..

19행 같은 경우 운영체제는 src과 dst이라는 명령 인수를 프로그램으로 전달할 것이다.
어떻게 전달하는가? argc와 argv를 통하는데, argc는 명령어 행(command line)에 존재하는
모든 단어들의 개수를 전달한다. 위의 경우 프로그램의 이름도 포함되므로 argc는 3이 된다.
argv는 문자형 포인터의 배열이다. 따라서 argv는 여러 개의 문자열을 가리킬 수 있다.

        argv[0]     -->     mycopy\0
  3     argv[1]     -->     src\0
argc    argv[2]     -->     dst\0
        argv 배열

    argv[] 배열의 원소들은 명령어 행에 있는 인수들의 주소를 가지게 된다.
    main 함수에서는 argv[] 배열을 통하여 명령어 행에서 입력된 인수들을 알 수 있다.
    문자열 맨 끝에 NULL도 잊지 말자

// main_arg.c
#include <stdio.h>

int main(int argc, char *argv[])
{
    int i = 0;

    for (i = 0; i < argc; i++)
        printf("명령어 행에서 %d번째 문자열 = %s\n", i, argv[i]);

    return 0;
}