<배열 포인터>
배열을 가리키는 포인터
    int (*pa)[10];
    1) 괄호가 있으므로 pa는 먼저 포인터가 된다.
    2) 어떤 포인터냐 하면 int[10]을 가리키는 포인터가 된다.

#include <stdio.h>

int main(void)
{
    int a[5] = {1, 2, 3, 4, 5};
    int (*pa)[5];       // int [5] 배열에 대한 포인터 선언
    int i;

    pa = &a;        // 배열 포인터에 배열의 주소를 계산하여 대입한다.
                    // 첫 번째 배열 요소의 주소가 아니다.
    for (i = 0; i < 5; i++)
        printf("%d\n", (*pa)[i]);
                        // 배열 포인터를 이용하여 배열의 각 원소에 접근, *pa가 배열이 됨
    return 0;
}

<포인터 배열과 배열 포인터의 비교>

int *ap[10];
    포인터의 배열이다. 배열을 나타내는 []연산자는 포인터를 나타내는 *연산자보다 
    우선순위가 높다. 따라서 ap는 먼저 배열이 된다. 어떤? -> 포인터들의 배열

int (*pa)[10];
    괄호에 의해 우선순위가 바뀌었다. *연산자가 먼저 적용된다. -> pa는 먼저 포인터가 됨
    어떤 포인터? -> int[10]을 가리키는 포인터

실전에서는 포인터의 배열이 훨씬 많이 나옴.
생각보다 배열 포인터(배열에 대한 포인터)를 잘 사용하지는 않는다.

