<qsort()함수>
c언어에서 정렬할 때 가장 많이 사용하는 라이브러리 함수가 qsort()이다. 
qsort() 함수는 데이터가 저장된 배열을 정렬한다. 
qsort()는 배열의 시작주소와 배열 원소의 개수, 원소 하나의 크기, 비교 함수를 받는다. 

qsort()는 범용 정렬 함수로 제작되었기 때문에 배열의 자료형은 알 수 없다. 
따라서 배열 원소를 직접 비교할 수는 없고, 외부의 함수를 받아서 그 함수를 호출하여 
원소와 원소를 비교한다.

void qsort(void *base, size_t nitems, size_t size, int (*compar)(const void*, 
const void*));

    base - 정렬될 배열의 주소
    nitems - 원소들의 개수(배열의 크기)
    size - 각 원소들의 크기(바이트 단위)
    compar - 2개의 원소를 비교하는 함수

    비교 함수 compar()는 배열의 원소의 주소 2개를 인수로 받는다. 
    첫 번째 인수가 첫 번째 원소의 주소이고, 두번째 인수가 두 번째 원소의 주소이다.
    비교함수가 반환해야 할 값은 int 형입니다. 반환값이 음수이면, 첫 번째 원소가
    두 번째 원소보다 작다. 0이면 같다는 뜻이고, 양수이면 첫번째 원소가
    두번째 원소보다 크다는 뜻이다.

    ==> 음수, (2, 4)
        0,    (2, 2)
        양수, (4, 2)

<qsort()를 호출하여 int values[] = {88, 56, 100, 2, 25}; 정렬하기
#include <stdio.h>
#include <stdlib.h>

int values[] = {88, 56, 100, 2, 25};

int compare(const void *a, const void *b)
{
    return (*(int*)a - *(int*)b);
}

int main(void)
{
    int n;
    qsort(values, 5, sizeof(int), compare);

    printf("정렬한 후 배열 : ");
    for (n = 0; n < 5; n++)
        printf("%d ", values[n]);
    printf("\n");

    return 0;
}