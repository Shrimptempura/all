<문자 검색>
    주어진 문자열에 특정한 문자가 있는지 검색하려면 strchr()를 이용한다.
- Syntax : strchr();
    char *p = strchr("dog", 'g');       // 'g' 문자의 주소를 반환한다.
    
    strchr()은 문자열 str의 첫 번째 문자부터 차례대로 검색해나가다가 문자 c를 찾으면 
    그 위치의 주소를 반환한다. 문자를 찾지 못하면 NULL값을 반환한다.

<문자열 검색>
    주어진 문자열 안에 특정한  문자열이 있는지 검색하려면 strstr() 사용
- Syntax : strstr();
    char *p = strstr("dog", "og");
    strstr() 함수는 문자열 s안에서 부분 문자열 sub를 검색하는 함수이다. 
    만약 부분 문자열이 발견되면 그 위치의 주소를 반환한다. 
    만약 부분 문자열을 찾지 못하면 NULL값을 반환한다.

<문자열 토큰 분리>
    strtok()은 상당히 자주 사용된다. 이 함수를 사용하면 문장에서 단어를 쉽게 분리 할 수
    있다. 토큰(token)이란 문법적으로 더 이상 나눌 수 없는 기본적 언어 요소이다.
    예로 문장에서 공백 문자로 분리된 단어들을 토큰이라고 할 수 있다.
    strtok()은 토큰을 분리하는 분리자를 사용자가 마음대로 지정할 수 있다.

- Syntax : strtok();
    char s[] = "HelloWorld";
    char delimit[] = " ";
    char *p = strtok(s, delimit);   // 문자열을 스페이스문자를 사용하여 단어들로 분리한다.

strtok 함수는 문자열 s에서 다음 토큰을 찾는다. 매개 변수 delimit가 가리키는 문자들은
토큰을 분리하는 분리자를 나타낸다. 예를 들어서 문자열에서 스페이스 문자를 분리자로
사용해서 첫 번째 토큰을 얻으려면 strtok(s, " ");와 같이 호출한다. strtok()은 첫 번째
토큰에 대한 포인터를 반환한다. 만약 계속해서 다음 토큰을 읽으려면 s 대신에 NULL을 
넣으면 된다. <즉> 나머지 토큰들은 연속적인 strtok(NULL, " ") 호출에 의해서 추출된다.

단어들을 분리하는 분리자를 여러 개 지정하려면 분리자들을 모아서 문자열로 만든다.
예로 '/'와 '\'를 동시 사용하려면, "/\" 요렇게 지정한다.