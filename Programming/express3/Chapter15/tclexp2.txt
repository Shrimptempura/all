< fseek()와 ftell()의 동작 >
fseek()는 세 개의 전달인자를 사용한다. 첫 번째는 처리할 파일을 가리키는 FILE 포인터다.
이 파일은 fopen() 함수에 의해 미리 열려 있어야 한다.

두번째 전달인자는 오프셋(offset)이라고 한다. 이 전달인자는 시작위치로부터 얼마나
멀리 가야 하는지 알려준다. 이 전달인자는 long형 값이어야 한다. (양수, 음수, 0)

세 번째 전달인자는 모드(mode)이다. 시작위치를 나타내며 관련 명단 상수(manifest constant)는
stdio.h 헤더 파일에 정의되어 있다.

    (모드)          (시작 위치)
    SEEK_SET        파일의 시작
    SEEK_CUR        현재 위치
    SEEK_END        파일의 끝

오래된 컴파일러들은 이 정의가 없을수도 있으며, 각 모드에 대응하는 수치값으로
0L, 1L, 2L을 사용할 수 있다. L은 long형 값을 나타낸다.

fseek(fp, 0L, SEEK_SET);    // 파일의 시작으로 간다.
fssek(fp, 10L, SEEK_SET);   // 파일의 시작에서 10바이트 앞으로 간다.
fseek(fp, 2L, SEEK_CUR);    // 현재 위치에서 2바이트 앞으로 간다.
fseek(fp, 10L, SEEK_END);   // 파일의 끝에서 10바이트 뒤로 간다.

    모든 것이 성공적이면 fseek()은 0을 리턴한다. 파일의 경계를 벗어나려는 시도와 같은,
    에러가 있으면 fseek()는 -1을 리턴한다.

ftell() 함수는 long형이다. 이 함수는 현재 파일 위치를 리턴한다. ANSI C에서 이 함수는
stdio.h에 선언되어 있다.
ftell() 함수는 Unix에서 처음 구현되었기 때문에, ftell()은 파일의 시작으로부터
첫 바이트를 0으로 하는 바이트 수를 리턴함으로써 파일 위치를 지정한다. ANSI C에서,
이 정의는 바이너리 모드로 열린 파일들에 적용된다. 그러나 무조건 텍스트 모드로 열린
파일들에 반드시 적용되는 것은 아니다. 

    last = ftell(fp);
    파일의 시작에서 파일의 끝까지의 바이트 수를 last에 대입한다.

    for (count = 1L; count <= last; count++)
    {
        fseek(fp, -count, SEEK_END);    // 뒤로 간다.
        ch = getc(fp)
    }
    첫 번째 사이클은, 파일의 끝 바로 뒤에 있는 첫 번째 문자(즉, 파일의 마지막 문자)에
    프로그램을 위치시키고, 그 문자를 출력한다.
    두 번째 사이클은 다시 한 문자 뒤로 프로그램을 위치시키고, 그 문자를 출력한다.
    이 과정은 파일의 첫 문자에 도달하여 그 문자를 출력할 때까지 계속한다.


이식성 때문에 텍스트 모드에서, fseek()는 다음만 동작을 보장한다.
    fseek(file, 0L, SEEK_SET);
    fseek(file, 0L, SEEK_CUR);
    fseek(file, 0L, SEEK_END);
    fseek(file, ftell-pos, SEEK_SET);
        = 파일의 시작에서 ftell-pos만큼 떨어진 위치로 간다. ftell-pos는 ftell()이
          리턴 하는 값이다.

          