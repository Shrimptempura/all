<열거형> enumeration
    변수가 가질 수 있는 값들을 나열해놓은 자료형, 변수가 가질 수 있는 값들을 나타내는
    상수들을 모아놓은 자료형
    ex) 요일 나타내는 변수 d, 변수 d는 일줄일중 하나만 가질수 있음. 이때 열거형 사용

<열거형이 필요한 이유>
요일을 나타낼때 일0, 월1, 화2.. 각 요일에 정수를 할당할수는 있으나
프로그래밍에서는 되도록 오류를 줄이고 가독성을 높여야 된다. 0 보다는 SUN라는 기호상수가
더 바람직하다. -> 의미를 쉽게 알 수있기 때문, 또한 today에 9와 같은 의미없는 값이 대입되지
않도록 미리 차단하는 것도 필요

<열거형의 정의>
열거형은 enum이라는 키워드를 사용한다. 열거형도 구조체처럼 사용자가 새로운 자료형을
정의하는 방법의 하나이다.
    Syntax : enum days {SUN, MON, TUE, .. SAT};
    아직 열거형의 변수는 생성되지 않음

enum days today; // 열거형 변수 today정의, today는 열거형 day에 정의된 값만 가질수 있음
today = SUN;    // 가능, 열거형 days에 정의된 기호상수 SUN은 변수 today에 대입가능

    today는 열거형 변수로서 열거형 days에 정의된 값만 가질수 있다.
    (즉, 일주일중 하나만 가질수 있음)
    그러나, 정의되지 않는 값을 대입하면 컴파일 오류가 발생한다.

<기호 상수들의 값>
enum days {SUN, MON, .. SAT};
열거형 기호상수들은 자동으로 0에서 시작하여 1씩 증가하는 정수값으로 자동설정된다.
    만약 1부터 시작하려면 첫 번째 식별자 뒤에 = 1을 붙여주면 된다.
    enum days {SUN = 1, MON, .. SAT};

    필요한 경우 모든 식별자 값을 개별 지정가능
    enum days {SUN = 2, MON = 1, .. SAT = 5};